/* B√†i 1: T·∫°o h√†m createCharacters:
‚óè Khai b√°o m·∫£ng c√°c object: characters c√≥ c√°c thu·ªôc t√≠nh: name, level, health.
‚óè S·ª≠ d·ª•ng h√†m map ƒë·ªÉ t·∫°o ra m·∫£ng m·ªõi: charactersPowerUp:
    ‚óã thu·ªôc t√≠nh name: UPPERCASE c·ªßa name g·ªëc
    ‚óã level: x2 c·ªßa level g·ªëc
    ‚óã health: x3 c·ªßa health g·ªëc
‚óè S·ª≠ d·ª•ng h√†m filter ƒë·ªÉ l·ªçc ra c√°c ph·∫ßn t·ª≠ c√≥ ch·ªâ s·ªë health > 1000. ƒê·∫∑t t√™n
m·∫£ng m·ªõi l·ªçc ƒë∆∞·ª£c n√†y l√† ‚ÄúpossibleWinners‚Äù*/

function createCharacters() {
    const characters = [{name: 'Mario', level: 2, health: 300},
                        {name: 'Luigi', level: 3, health: 600},
                        {name: 'Peach', level: 1, health: 450},
                        {name: 'Yoshi', level: 4, health: 677},
                        {name: 'Phong', level: 5, health: 333}];

    // T·∫°o bi·∫øn charactersPowerUp
    charactersPowerUp = characters.map(characters => ({
        name: characters.name.toUpperCase(),
        level: characters.level * 2,
        health: characters.health * 3
    }));
    console.log('Danh s√°ch c√°c nh√¢n v·∫≠t sau khi n√¢ng c·∫•p');
    for (let i = 0; i < charactersPowerUp.length; i++) {
        console.log(`T√™n: ${charactersPowerUp[i].name}; C·∫•p: ${charactersPowerUp[i].level}; M√°u: ${charactersPowerUp[i].health}`);
    }

    // T·∫°o bi·∫øn possibleWinners
    possibleWinners = charactersPowerUp.filter(charactersPowerUp => charactersPowerUp.health > 1000);
    console.log('\nDanh s√°ch c√°c nh√¢n v·∫≠t c√≥ th·ªÉ th·∫Øng m√†n');
    for (let i = 0; i < possibleWinners.length; i++) {
        console.log(`T√™n: ${possibleWinners[i].name}; C·∫•p: ${possibleWinners[i].level}; M√°u: ${possibleWinners[i].health}`);
    }
}

createCharacters();

/* B√†i 2: T·∫°o h√†m printLeaderboard:
‚óè Nh·∫≠n v√†o tham s·ªë: players l√† m·∫£ng c√°c object: [{name: "Mario", score:
1000}, ...]
‚óè S·∫Øp x·∫øp m·∫£ng ng∆∞·ªùi ch∆°i theo th·ª© t·ª± score t·ª´ cao ƒë·∫øn th·∫•p.
‚óè In ra b·∫£ng x·∫øp h·∫°ng. L∆∞u √Ω: v·ªõi 3 v·ªã tr√≠ 1, 2, 3, h√£y th√™m huy ch∆∞∆°ng ph√≠a
tr∆∞·ªõc*/
players = [{name: 'Mario', score: 1_000},
           {name: 'Luigi', score: 5_000},
           {name: 'Peach', score: 2_000},
           {name: 'Yoshi', score: 300},
           {name: 'Hung', score: 990}];

// C√°ch 1: D√πng h√†m sort()
function printLeaderboard(players) {
    // D√πng h√†m sort s·∫Øp x·∫øp l·∫°i m·∫£ng theo chi·ªÅu gi·∫£m d·∫ßn
    players.sort((a, b) => b.score - a.score); 

    // In ra danh s√°ch
    for (let i = 0; i < players.length; i++) {
        let medalIcon = '  '; // M·∫∑c ƒë·ªãnh ƒë·ªÉ tr·ªëng
        if (i === 0) {
            medalIcon = 'ü•á'; // N·∫øu player x·∫øp h·∫°ng 1 th√¨ in ra k√®m huy ch∆∞∆°ng ·ªü ƒë·∫ßu
        } else if (i === 1) { 
            medalIcon = 'ü•à'; // T∆∞∆°ng t·ª± cho player h·∫°ng 2
        } else if (i === 2) { 
            medalIcon ='ü•â'; // T∆∞∆°ng t·ª± cho player h·∫°ng 3
        }
        console.log(`${medalIcon} ${i + 1}. ${players[i].name} - ${players[i].score} pts`);
    }
}

printLeaderboard(players);

// C√°ch 2: D√πng thu·∫≠t to√°n ƒë·ªÉ s·∫Øp x·∫øp l·∫°i m·∫£ng
function sortLeaderboard(players) {
    let temp = {};

    for (let i = 0; i < players.length; i++) {
        for (let j = i + 1; j < players.length; j++) {
            // So s√°nh ph·∫ßn t·ª≠ th·ª© i trong m·∫£ng v·ªõi ph·∫ßn t·ª≠ k·∫ø ti·∫øp
            if (players[i].score < players[j].score) { 
                // N·∫øu ph·∫ßn t·ª≠ ph√≠a sau l·ªõn h∆°n th√¨ g√°n l·∫°i v·ªã tr√≠ l√™n ph√≠a tr∆∞·ªõc
                temp = players[i];                
                players[i] = players[j];
                players[j] = temp;
            }
        }
    }
    return players;
}

function printLeaderboard(players) {
    const sortedplayers = sortLeaderboard(players); // T·∫°o 1 bi·∫øn ƒë·ªÉ ch·ª©a m·∫£ng sau khi ƒë√£ s·∫Øp x·∫øp
    // In ra danh s√°ch
    for (let i = 0; i < sortedplayers.length; i++) {
        let medalIcon = '  '; // M·∫∑c ƒë·ªãnh ƒë·ªÉ tr·ªëng
        if (i === 0) {
            medalIcon = 'ü•á'; // N·∫øu player x·∫øp h·∫°ng 1 th√¨ in ra k√®m huy ch∆∞∆°ng ·ªü ƒë·∫ßu
        } else if (i === 1) { 
            medalIcon = 'ü•à'; // T∆∞∆°ng t·ª± cho player h·∫°ng 2
        } else if (i === 2) { 
            medalIcon ='ü•â'; // T∆∞∆°ng t·ª± cho player h·∫°ng 3
        }
        console.log(`${medalIcon} ${i + 1}. ${sortedplayers[i].name} - ${sortedplayers[i].score} pts`);
    }
}

printLeaderboard(players);